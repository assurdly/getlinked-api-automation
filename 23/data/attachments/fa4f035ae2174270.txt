<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>IntegrityError
          at /global_intern/global_intern_registration/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>IntegrityError
       at /global_intern/global_intern_registration/</h1>
  <pre class="exception_value">duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;
DETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.
</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>https://dev.getlinked.ai/global_intern/global_intern_registration/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.1</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>IntegrityError</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;
DETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.
</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</span>, line 105, in _execute</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>global_intern.views.GlobalInternAPIView</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/home/GetLinkBackend/venv/bin/python3</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.12.3</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/home/GetLinkBackend&#x27;,
 &#x27;/home/GetLinkBackend&#x27;,
 &#x27;/home/GetLinkBackend/venv/bin&#x27;,
 &#x27;/usr/lib/python312.zip&#x27;,
 &#x27;/usr/lib/python3.12&#x27;,
 &#x27;/usr/lib/python3.12/lib-dynload&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Thu, 07 Nov 2024 12:44:19 +0100</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c126371459218048">
              
                <ol start="98" class="pre-context" id="pre126371459218048">
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post126371459218048">
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371459218048">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
          <li class="cause"><h3>
          
            The above exception (duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;
DETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.
) was the direct cause of the following exception:
          
        </h3></li>
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c126371456485184">
              
                <ol start="48" class="pre-context" id="pre126371456485184">
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post126371456485184">
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre126371456485184', 'post126371456485184')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456485184">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>IntegrityError(&#x27;duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;\nDETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x72ef3a8ff440&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c126371456493120">
              
                <ol start="190" class="pre-context" id="pre126371456493120">
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post126371456493120">
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456493120', 'post126371456493120')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456493120">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x72ef26711760&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x72ef3a8ff440&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x72ef26711760&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c126371456493632">
              
                <ol start="58" class="pre-context" id="pre126371456493632">
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post126371456493632">
                  
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456493632', 'post126371456493632')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456493632">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x72ef26710fe0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c126371458648512">
              
                <ol start="97" class="pre-context" id="pre126371458648512">
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post126371458648512">
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre126371458648512', 'post126371458648512')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458648512">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;global_intern.views.GlobalInternAPIView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c126371456487936">
              
                <ol start="502" class="pre-context" id="pre126371456487936">
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post126371456487936">
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre126371456487936', 'post126371456487936')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456487936">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method GlobalInternAPIView.post of &lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c126371451729728">
              
                <ol start="462" class="pre-context" id="pre126371451729728">
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post126371451729728">
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre126371451729728', 'post126371451729728')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371451729728">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;,
 &#x27;view&#x27;: &lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>IntegrityError(&#x27;duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;\nDETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x72ef26e089a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c126371459211968">
              
                <ol start="473" class="pre-context" id="pre126371459211968">
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post126371459211968">
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre126371459211968', 'post126371459211968')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371459211968">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>IntegrityError(&#x27;duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;\nDETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c126371458649280">
              
                <ol start="499" class="pre-context" id="pre126371458649280">
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post126371458649280">
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre126371458649280', 'post126371458649280')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458649280">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method GlobalInternAPIView.post of &lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/usr/lib/python3.12/contextlib.py</code>, line 81, in inner
          

          
            <div class="context" id="c126371458656192">
              
                <ol start="74" class="pre-context" id="pre126371458656192">
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>        return self</pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>    def __call__(self, func):</pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>        @wraps(func)</pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>        def inner(*args, **kwds):</pre></li>
                
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>            with self._recreate_cm():</pre></li>
                
                </ol>
              
              <ol start="81" class="context-line">
                <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>                return func(*args, **kwds)
                           ^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='82' class="post-context" id="post126371458656192">
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>class AsyncContextDecorator(object):</pre></li>
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre>    &quot;A base class or mixin that enables async context managers to work as decorators.&quot;</pre></li>
                  
                  <li onclick="toggle('pre126371458656192', 'post126371458656192')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458656192">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;,
 &lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>func</td>
                    <td class="code"><pre>&lt;function GlobalInternAPIView.post at 0x72ef267111c0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwds</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.transaction.Atomic object at 0x72ef2671cfb0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/global_intern/views.py</code>, line 118, in post
          

          
            <div class="context" id="c126371458707456">
              
                <ol start="111" class="pre-context" id="pre126371458707456">
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;email&quot;: email,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;password&quot;: create_password,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;phone_number&quot;: phone_number,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;gender&quot;: gender,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;first_name&quot;: first_name,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>            &quot;last_name&quot;: last_name,</pre></li>
                
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        }</pre></li>
                
                </ol>
              
              <ol start="118" class="context-line">
                <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        user = User.sign_up(**user_data)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='119' class="post-context" id="post126371458707456">
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        user.email_verified = True</pre></li>
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        user.phone_number_verified = True</pre></li>
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        user.save()</pre></li>
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre>        self.send_welcome_email(email, name)</pre></li>
                  
                  <li onclick="toggle('pre126371458707456', 'post126371458707456')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458707456">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>create_password</td>
                    <td class="code"><pre>&#x27;Test@1234&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>email</td>
                    <td class="code"><pre>&#x27;chukaibeji1@yopmail.com&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>first_name</td>
                    <td class="code"><pre>&#x27;Chuks&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>gender</td>
                    <td class="code"><pre>&#x27;Male&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>last_name</td>
                    <td class="code"><pre>&#x27;Ibejindu&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;Chuks Ibejindu&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>phone_number</td>
                    <td class="code"><pre>&#x27;07013729134&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/global_intern/global_intern_registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;global_intern.views.GlobalInternAPIView object at 0x72ef25e65ee0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>OnboardGlobalIntern(data=&lt;QueryDict: {&#x27;name&#x27;: [&#x27;Chuks Ibejindu&#x27;], &#x27;email&#x27;: [&#x27;chukaibeji1@yopmail.com&#x27;], &#x27;phone_number&#x27;: [&#x27;07013729134&#x27;], &#x27;role&#x27;: [&#x27;Software Engineer&#x27;], &#x27;years_of_experience&#x27;: [&#x27;2&#x27;], &#x27;current_location&#x27;: [&#x27;New York, USA&#x27;], &#x27;linkedin_profile&#x27;: [&#x27;https://www.linkedin.com/in/tobitaiwo&#x27;], &#x27;portfolio_website&#x27;: [&#x27;https://johndoeportfolio.com&#x27;], &#x27;confirm_password&#x27;: [&#x27;Test@1234&#x27;], &#x27;gender&#x27;: [&#x27;Male&#x27;]}&gt;):
    name = CharField(max_length=100)
    email = EmailField()
    phone_number = CharField(allow_blank=True, max_length=100, required=False)
    role = CharField(allow_blank=True, max_length=225, required=False)
    years_of_experience = CharField(max_length=100)
    current_location = CharField(allow_blank=True, max_length=225, required=False)
    linkedin_profile = CharField(allow_blank=True, required=False)
    portfolio_website = CharField(allow_blank=True, required=False)
    gender = CharField(allow_blank=True, max_length=10, required=False)
    cv = FileField(required=False, write_only=True)
    confirm_password = CharField(allow_blank=True, max_length=225, required=False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>user_data</td>
                    <td class="code"><pre>{&#x27;email&#x27;: &#x27;chukaibeji1@yopmail.com&#x27;,
 &#x27;first_name&#x27;: &#x27;Chuks&#x27;,
 &#x27;gender&#x27;: &#x27;Male&#x27;,
 &#x27;last_name&#x27;: &#x27;Ibejindu&#x27;,
 &#x27;password&#x27;: &#x27;Test@1234&#x27;,
 &#x27;phone_number&#x27;: &#x27;07013729134&#x27;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/user_profile/models.py</code>, line 112, in sign_up
          

          
            <div class="context" id="c126371458660800">
              
                <ol start="105" class="pre-context" id="pre126371458660800">
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            is_account_manager (bool): Optional. Whether the user is an account manager. Default is False.</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>        Returns:</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            bool: True if the user instance is created successfully.</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>        # format_dob = date_of_birth.strip()</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>        # date_of_birth = date(int(format_dob[0], int(format_dob[1]), int(format_dob[2])))</pre></li>
                
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre></pre></li>
                
                </ol>
              
              <ol start="112" class="context-line">
                <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>        user = cls.objects.create(
                    </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='113' class="post-context" id="post126371458660800">
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            first_name=first_name,</pre></li>
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            last_name=last_name,</pre></li>
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            email=email,</pre></li>
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            phone_number=phone_number,</pre></li>
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            gender=gender,</pre></li>
                  
                  <li onclick="toggle('pre126371458660800', 'post126371458660800')"><pre>            date_of_birth=date_of_birth,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458660800">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;user_profile.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>date_of_birth</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>email</td>
                    <td class="code"><pre>&#x27;chukaibeji1@yopmail.com&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>first_name</td>
                    <td class="code"><pre>&#x27;Chuks&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>gender</td>
                    <td class="code"><pre>&#x27;Male&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>last_name</td>
                    <td class="code"><pre>&#x27;Ibejindu&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>password</td>
                    <td class="code"><pre>&#x27;Test@1234&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>phone_number</td>
                    <td class="code"><pre>&#x27;07013729134&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c126371458660352">
              
                <ol start="80" class="pre-context" id="pre126371458660352">
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post126371458660352">
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre126371458660352', 'post126371458660352')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458660352">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;date_of_birth&#x27;: None,
 &#x27;email&#x27;: &#x27;chukaibeji1@yopmail.com&#x27;,
 &#x27;first_name&#x27;: &#x27;Chuks&#x27;,
 &#x27;gender&#x27;: &#x27;Male&#x27;,
 &#x27;last_name&#x27;: &#x27;Ibejindu&#x27;,
 &#x27;phone_number&#x27;: &#x27;07013729134&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;create&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;user_profile.managers.UserManager object at 0x72ef28266150&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/query.py</code>, line 679, in create
          

          
            <div class="context" id="c126371456317696">
              
                <ol start="672" class="pre-context" id="pre126371456317696">
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>            raise ValueError(</pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>                &quot;The following fields do not exist in this model: %s&quot;</pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>                % &quot;, &quot;.join(reverse_one_to_one_fields)</pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>        obj = self.model(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>        self._for_write = True</pre></li>
                
                </ol>
              
              <ol start="679" class="context-line">
                <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>        obj.save(force_insert=True, using=self.db)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='680' class="post-context" id="post126371456317696">
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>        return obj</pre></li>
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>    async def acreate(self, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>        return await sync_to_async(self.create)(**kwargs)</pre></li>
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456317696', 'post126371456317696')"><pre>    def _prepare_for_bulk_create(self, objs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456317696">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;date_of_birth&#x27;: None,
 &#x27;email&#x27;: &#x27;chukaibeji1@yopmail.com&#x27;,
 &#x27;first_name&#x27;: &#x27;Chuks&#x27;,
 &#x27;gender&#x27;: &#x27;Male&#x27;,
 &#x27;last_name&#x27;: &#x27;Ibejindu&#x27;,
 &#x27;phone_number&#x27;: &#x27;07013729134&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>reverse_one_to_one_fields</td>
                    <td class="code"><pre>frozenset()</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: moses@yopmail.com&gt;, &lt;User: xatim56758@astegol.com&gt;, &lt;User: jeromem59@astegol.com&gt;, &lt;User: Judah.Dibbert55@hotmail.com&gt;, &lt;User: Katelynn_DAmore@gmail.com&gt;, &lt;User: Henriette36@yahoo.com&gt;, &lt;User: Grady_Christiansen48@hotmail.com&gt;, &lt;User: Carlo94@yahoo.com&gt;, &lt;User: bisola@mailinator.com&gt;, &lt;User: {{randomFirst}}@yopmail.com&gt;, &lt;User: recruiter@yopmail.com&gt;, &lt;User: bisola@yop.com&gt;, &lt;User: bisola@yopmail.com&gt;, &lt;User: adere@yopmail.com&gt;, &lt;User: mandyy@yopmail.co&gt;, &lt;User: kegrinohoddeu-3333@yopmail.com&gt;, &lt;User: ibejih@gmail.com&gt;, &lt;User: bamise@mailinator.com&gt;, &lt;User: kassia@mailinator.com&gt;, &lt;User: jare@yopmail.com&gt;, &#x27;...(remaining elements truncated)...&#x27;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/contrib/auth/base_user.py</code>, line 62, in save
          

          
            <div class="context" id="c126371456400640">
              
                <ol start="55" class="pre-context" id="pre126371456400640">
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    def __str__(self):</pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>        return self.get_username()</pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    # RemovedInDjango60Warning: When the deprecation ends, replace with:</pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    # def save(self, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    #   super().save(**kwargs)</pre></li>
                
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    def save(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="62" class="context-line">
                <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>        super().save(*args, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='63' class="post-context" id="post126371456400640">
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>        if self._password is not None:</pre></li>
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>            password_validation.password_changed(self._password, self)</pre></li>
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>            self._password = None</pre></li>
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>    def get_username(self):</pre></li>
                  
                  <li onclick="toggle('pre126371456400640', 'post126371456400640')"><pre>        &quot;&quot;&quot;Return the username for this User.&quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456400640">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.base_user.AbstractBaseUser&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;force_insert&#x27;: True, &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py</code>, line 891, in save
          

          
            <div class="context" id="c126371458658112">
              
                <ol start="884" class="pre-context" id="pre126371458658112">
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            for field in self._meta.concrete_fields:</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>                if not field.primary_key and not hasattr(field, &quot;through&quot;):</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>                    field_names.add(field.attname)</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            loaded_fields = field_names.difference(deferred_non_generated_fields)</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            if loaded_fields:</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>                update_fields = frozenset(loaded_fields)</pre></li>
                
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre></pre></li>
                
                </ol>
              
              <ol start="891" class="context-line">
                <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>        self.save_base(
             ^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='892' class="post-context" id="post126371458658112">
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            force_insert=force_insert,</pre></li>
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            force_update=force_update,</pre></li>
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>            update_fields=update_fields,</pre></li>
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre126371458658112', 'post126371458658112')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458658112">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>deferred_non_generated_fields</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py</code>, line 997, in save_base
          

          
            <div class="context" id="c126371456486784">
              
                <ol start="990" class="pre-context" id="pre126371456486784">
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>            parent_inserted = False</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>            if not raw:</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                # Validate force insert only when parents are inserted.</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                force_insert = self._validate_force_insert(force_insert)</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                parent_inserted = self._save_parents(</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                    cls, using, update_fields, force_insert</pre></li>
                
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="997" class="context-line">
                <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>            updated = self._save_table(
                           </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='998' class="post-context" id="post126371456486784">
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                raw,</pre></li>
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                cls,</pre></li>
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                force_insert or parent_inserted,</pre></li>
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                force_update,</pre></li>
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                using,</pre></li>
                  
                  <li onclick="toggle('pre126371456486784', 'post126371456486784')"><pre>                update_fields,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456486784">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;user_profile.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>context_manager</td>
                    <td class="code"><pre>&lt;contextlib._GeneratorContextManager object at 0x72ef25e667b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>(&lt;class &#x27;user_profile.models.User&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for User&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#x27;user_profile.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parent_inserted</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py</code>, line 1160, in _save_table
          

          
            <div class="context" id="c126371456497600">
              
                <ol start="1153" class="pre-context" id="pre126371456497600">
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            fields = [</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                f</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                for f in meta.local_concrete_fields</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                if not f.generated and (pk_set or f is not meta.auto_field)</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            ]</pre></li>
                
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            returning_fields = meta.db_returning_fields</pre></li>
                
                </ol>
              
              <ol start="1160" class="context-line">
                <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            results = self._do_insert(
                            </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1161' class="post-context" id="post126371456497600">
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                cls._base_manager, using, fields, returning_fields, raw</pre></li>
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>            if results:</pre></li>
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                for value, field in zip(results[0], returning_fields):</pre></li>
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>                    setattr(self, field.attname, value)</pre></li>
                  
                  <li onclick="toggle('pre126371456497600', 'post126371456497600')"><pre>        return updated</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456497600">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;user_profile.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.DateTimeField: last_login&gt;,
 &lt;django.db.models.fields.BooleanField: is_superuser&gt;,
 &lt;django.db.models.fields.UUIDField: id&gt;,
 &lt;django.db.models.fields.DateTimeField: created_at&gt;,
 &lt;django.db.models.fields.DateTimeField: updated_at&gt;,
 &lt;django.db.models.fields.CharField: first_name&gt;,
 &lt;django.db.models.fields.CharField: middle_name&gt;,
 &lt;django.db.models.fields.CharField: last_name&gt;,
 &lt;django.db.models.fields.EmailField: email&gt;,
 &lt;django.db.models.fields.BooleanField: email_verified&gt;,
 &lt;django.db.models.fields.CharField: password&gt;,
 &lt;django.db.models.fields.CharField: phone_number&gt;,
 &lt;django.db.models.fields.BooleanField: phone_verified&gt;,
 &lt;django.db.models.fields.TextField: address&gt;,
 &lt;django.db.models.fields.CharField: gender&gt;,
 &lt;django.db.models.fields.CharField: user_type&gt;,
 &lt;django.db.models.fields.DateField: date_of_birth&gt;,
 &lt;django.db.models.fields.BooleanField: is_active&gt;,
 &lt;django.db.models.fields.BooleanField: is_staff&gt;,
 &lt;django.db.models.fields.CharField: referral_code&gt;,
 &lt;django.db.models.fields.BooleanField: has_updated_password&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>(&lt;class &#x27;user_profile.models.User&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for User&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks_non_generated</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.DateTimeField: last_login&gt;,
 &lt;django.db.models.fields.BooleanField: is_superuser&gt;,
 &lt;django.db.models.fields.DateTimeField: created_at&gt;,
 &lt;django.db.models.fields.DateTimeField: updated_at&gt;,
 &lt;django.db.models.fields.CharField: first_name&gt;,
 &lt;django.db.models.fields.CharField: middle_name&gt;,
 &lt;django.db.models.fields.CharField: last_name&gt;,
 &lt;django.db.models.fields.EmailField: email&gt;,
 &lt;django.db.models.fields.BooleanField: email_verified&gt;,
 &lt;django.db.models.fields.CharField: password&gt;,
 &lt;django.db.models.fields.CharField: phone_number&gt;,
 &lt;django.db.models.fields.BooleanField: phone_verified&gt;,
 &lt;django.db.models.fields.TextField: address&gt;,
 &lt;django.db.models.fields.CharField: gender&gt;,
 &lt;django.db.models.fields.CharField: user_type&gt;,
 &lt;django.db.models.fields.DateField: date_of_birth&gt;,
 &lt;django.db.models.fields.BooleanField: is_active&gt;,
 &lt;django.db.models.fields.BooleanField: is_staff&gt;,
 &lt;django.db.models.fields.CharField: referral_code&gt;,
 &lt;django.db.models.fields.BooleanField: has_updated_password&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py</code>, line 1201, in _do_insert
          

          
            <div class="context" id="c126371458660608">
              
                <ol start="1194" class="pre-context" id="pre126371458660608">
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        return filtered._update(values) &gt; 0</pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>    def _do_insert(self, manager, using, fields, returning_fields, raw):</pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        Do an INSERT. If returning_fields is defined then this method should</pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        return the newly created data for the model.</pre></li>
                
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1201" class="context-line">
                <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        return manager._insert(
                     </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1202' class="post-context" id="post126371458660608">
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>            [self],</pre></li>
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>            fields=fields,</pre></li>
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>            returning_fields=returning_fields,</pre></li>
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>            using=using,</pre></li>
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>            raw=raw,</pre></li>
                  
                  <li onclick="toggle('pre126371458660608', 'post126371458660608')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458660608">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.DateTimeField: last_login&gt;,
 &lt;django.db.models.fields.BooleanField: is_superuser&gt;,
 &lt;django.db.models.fields.UUIDField: id&gt;,
 &lt;django.db.models.fields.DateTimeField: created_at&gt;,
 &lt;django.db.models.fields.DateTimeField: updated_at&gt;,
 &lt;django.db.models.fields.CharField: first_name&gt;,
 &lt;django.db.models.fields.CharField: middle_name&gt;,
 &lt;django.db.models.fields.CharField: last_name&gt;,
 &lt;django.db.models.fields.EmailField: email&gt;,
 &lt;django.db.models.fields.BooleanField: email_verified&gt;,
 &lt;django.db.models.fields.CharField: password&gt;,
 &lt;django.db.models.fields.CharField: phone_number&gt;,
 &lt;django.db.models.fields.BooleanField: phone_verified&gt;,
 &lt;django.db.models.fields.TextField: address&gt;,
 &lt;django.db.models.fields.CharField: gender&gt;,
 &lt;django.db.models.fields.CharField: user_type&gt;,
 &lt;django.db.models.fields.DateField: date_of_birth&gt;,
 &lt;django.db.models.fields.BooleanField: is_active&gt;,
 &lt;django.db.models.fields.BooleanField: is_staff&gt;,
 &lt;django.db.models.fields.CharField: referral_code&gt;,
 &lt;django.db.models.fields.BooleanField: has_updated_password&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>manager</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x72ef267bf680&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;User: chukaibeji1@yopmail.com&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c126371458660288">
              
                <ol start="80" class="pre-context" id="pre126371458660288">
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post126371458660288">
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre126371458660288', 'post126371458660288')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458660288">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>([&lt;User: chukaibeji1@yopmail.com&gt;],)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;fields&#x27;: [&lt;django.db.models.fields.DateTimeField: last_login&gt;,
            &lt;django.db.models.fields.BooleanField: is_superuser&gt;,
            &lt;django.db.models.fields.UUIDField: id&gt;,
            &lt;django.db.models.fields.DateTimeField: created_at&gt;,
            &lt;django.db.models.fields.DateTimeField: updated_at&gt;,
            &lt;django.db.models.fields.CharField: first_name&gt;,
            &lt;django.db.models.fields.CharField: middle_name&gt;,
            &lt;django.db.models.fields.CharField: last_name&gt;,
            &lt;django.db.models.fields.EmailField: email&gt;,
            &lt;django.db.models.fields.BooleanField: email_verified&gt;,
            &lt;django.db.models.fields.CharField: password&gt;,
            &lt;django.db.models.fields.CharField: phone_number&gt;,
            &lt;django.db.models.fields.BooleanField: phone_verified&gt;,
            &lt;django.db.models.fields.TextField: address&gt;,
            &lt;django.db.models.fields.CharField: gender&gt;,
            &lt;django.db.models.fields.CharField: user_type&gt;,
            &lt;django.db.models.fields.DateField: date_of_birth&gt;,
            &lt;django.db.models.fields.BooleanField: is_active&gt;,
            &lt;django.db.models.fields.BooleanField: is_staff&gt;,
            &lt;django.db.models.fields.CharField: referral_code&gt;,
            &lt;django.db.models.fields.BooleanField: has_updated_password&gt;],
 &#x27;raw&#x27;: False,
 &#x27;returning_fields&#x27;: [],
 &#x27;using&#x27;: &#x27;default&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;_insert&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.manager.Manager object at 0x72ef267bf680&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/query.py</code>, line 1847, in _insert
          

          
            <div class="context" id="c126371458654592">
              
                <ol start="1840" class="pre-context" id="pre126371458654592">
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>        query = sql.InsertQuery(</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>            self.model,</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>            on_conflict=on_conflict,</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>            update_fields=update_fields,</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>            unique_fields=unique_fields,</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>        query.insert_values(fields, objs, raw=raw)</pre></li>
                
                </ol>
              
              <ol start="1847" class="context-line">
                <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>        return query.get_compiler(using=using).execute_sql(returning_fields)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1848' class="post-context" id="post126371458654592">
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>    _insert.alters_data = True</pre></li>
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>    _insert.queryset_only = False</pre></li>
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>    def _batched_insert(</pre></li>
                  
                  <li onclick="toggle('pre126371458654592', 'post126371458654592')"><pre>        self,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458654592">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.DateTimeField: last_login&gt;,
 &lt;django.db.models.fields.BooleanField: is_superuser&gt;,
 &lt;django.db.models.fields.UUIDField: id&gt;,
 &lt;django.db.models.fields.DateTimeField: created_at&gt;,
 &lt;django.db.models.fields.DateTimeField: updated_at&gt;,
 &lt;django.db.models.fields.CharField: first_name&gt;,
 &lt;django.db.models.fields.CharField: middle_name&gt;,
 &lt;django.db.models.fields.CharField: last_name&gt;,
 &lt;django.db.models.fields.EmailField: email&gt;,
 &lt;django.db.models.fields.BooleanField: email_verified&gt;,
 &lt;django.db.models.fields.CharField: password&gt;,
 &lt;django.db.models.fields.CharField: phone_number&gt;,
 &lt;django.db.models.fields.BooleanField: phone_verified&gt;,
 &lt;django.db.models.fields.TextField: address&gt;,
 &lt;django.db.models.fields.CharField: gender&gt;,
 &lt;django.db.models.fields.CharField: user_type&gt;,
 &lt;django.db.models.fields.DateField: date_of_birth&gt;,
 &lt;django.db.models.fields.BooleanField: is_active&gt;,
 &lt;django.db.models.fields.BooleanField: is_staff&gt;,
 &lt;django.db.models.fields.CharField: referral_code&gt;,
 &lt;django.db.models.fields.BooleanField: has_updated_password&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>objs</td>
                    <td class="code"><pre>[&lt;User: chukaibeji1@yopmail.com&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>on_conflict</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.InsertQuery object at 0x72ef25e67110&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: moses@yopmail.com&gt;, &lt;User: xatim56758@astegol.com&gt;, &lt;User: jeromem59@astegol.com&gt;, &lt;User: Judah.Dibbert55@hotmail.com&gt;, &lt;User: Katelynn_DAmore@gmail.com&gt;, &lt;User: Henriette36@yahoo.com&gt;, &lt;User: Grady_Christiansen48@hotmail.com&gt;, &lt;User: Carlo94@yahoo.com&gt;, &lt;User: bisola@mailinator.com&gt;, &lt;User: {{randomFirst}}@yopmail.com&gt;, &lt;User: recruiter@yopmail.com&gt;, &lt;User: bisola@yop.com&gt;, &lt;User: bisola@yopmail.com&gt;, &lt;User: adere@yopmail.com&gt;, &lt;User: mandyy@yopmail.co&gt;, &lt;User: kegrinohoddeu-3333@yopmail.com&gt;, &lt;User: ibejih@gmail.com&gt;, &lt;User: bamise@mailinator.com&gt;, &lt;User: kassia@mailinator.com&gt;, &lt;User: jare@yopmail.com&gt;, &#x27;...(remaining elements truncated)...&#x27;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>unique_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/sql/compiler.py</code>, line 1836, in execute_sql
          

          
            <div class="context" id="c126371459219264">
              
                <ol start="1829" class="pre-context" id="pre126371459219264">
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>            and not self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>        opts = self.query.get_meta()</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>        self.returning_fields = returning_fields</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>        cols = []</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>        with self.connection.cursor() as cursor:</pre></li>
                
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>            for sql, params in self.as_sql():</pre></li>
                
                </ol>
              
              <ol start="1836" class="context-line">
                <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>                cursor.execute(sql, params)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1837' class="post-context" id="post126371459219264">
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>            if not self.returning_fields:</pre></li>
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>                return []</pre></li>
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>                self.connection.features.can_return_rows_from_bulk_insert</pre></li>
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>                and len(self.query.objs) &gt; 1</pre></li>
                  
                  <li onclick="toggle('pre126371459219264', 'post126371459219264')"><pre>            ):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371459219264">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cols</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for User&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>returning_fields</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLInsertCompiler model=User connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 122, in execute
          

          
            <div class="context" id="c126371456496768">
              
                <ol start="115" class="pre-context" id="pre126371456496768">
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>    # XXX callproc isn&#x27;t instrumented at this time.</pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>        with self.debug_sql(sql, params, use_last_executed_query=True):</pre></li>
                
                </ol>
              
              <ol start="122" class="context-line">
                <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>            return super().execute(sql, params)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='123' class="post-context" id="post126371456496768">
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>        with self.debug_sql(sql, param_list, many=True):</pre></li>
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>            return super().executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456496768', 'post126371456496768')"><pre>    @contextmanager</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456496768">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.backends.utils.CursorDebugWrapper&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 79, in execute
          

          
            <div class="context" id="c126371456494720">
              
                <ol start="72" class="pre-context" id="pre126371456494720">
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>            elif kparams is None:</pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>                return self.cursor.callproc(procname, params)</pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>                params = params or ()</pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>                return self.cursor.callproc(procname, params, kparams)</pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                </ol>
              
              <ol start="79" class="context-line">
                <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>        return self._execute_with_wrappers(
                   </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='80' class="post-context" id="post126371456494720">
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>            sql, params, many=False, executor=self._execute</pre></li>
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>        return self._execute_with_wrappers(</pre></li>
                  
                  <li onclick="toggle('pre126371456494720', 'post126371456494720')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456494720">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 92, in _execute_with_wrappers
          

          
            <div class="context" id="c126371459215872">
              
                <ol start="85" class="pre-context" id="pre126371459215872">
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        context = {&quot;connection&quot;: self.db, &quot;cursor&quot;: self}</pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                </ol>
              
              <ol start="92" class="context-line">
                <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        return executor(sql, params, many, context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='93' class="post-context" id="post126371459215872">
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre126371459215872', 'post126371459215872')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371459215872">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
 &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>executor</td>
                    <td class="code"><pre>&lt;bound method CursorWrapper._execute of &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>many</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 100, in _execute
          

          
            <div class="context" id="c126371456487040">
              
                <ol start="93" class="pre-context" id="pre126371456487040">
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre></pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>        # ever set during testing).</pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                </ol>
              
              <ol start="100" class="context-line">
                <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>        with self.db.wrap_database_errors:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='101' class="post-context" id="post126371456487040">
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>                # params default might be backend specific.</pre></li>
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>                return self.cursor.execute(sql)</pre></li>
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre>                return self.cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre126371456487040', 'post126371456487040')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371456487040">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/utils.py</code>, line 91, in __exit__
          

          
            <div class="context" id="c126371458776768">
              
                <ol start="84" class="pre-context" id="pre126371458776768">
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>            db_exc_type = getattr(self.wrapper.Database, dj_exc_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                # Only set the &#x27;errors_occurred&#x27; flag for errors that may make</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                # the connection unusable.</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li>
                
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                    self.wrapper.errors_occurred = True</pre></li>
                
                </ol>
              
              <ol start="91" class="context-line">
                <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>                raise dj_exc_value.with_traceback(traceback) from exc_value
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='92' class="post-context" id="post126371458776768">
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>    def __call__(self, func):</pre></li>
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li>
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>        # reasons. Refs #21109.</pre></li>
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>        def inner(*args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre126371458776768', 'post126371458776768')"><pre>            with self:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371458776768">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.IntegrityError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.utils.IntegrityError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>IntegrityError(&#x27;duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;\nDETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.errors.UniqueViolation&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>UniqueViolation(&#x27;duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;\nDETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0x72ef267bfbc0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0x72ef25efba80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py</code>, line 105, in _execute
          

          
            <div class="context" id="c126371459218048">
              
                <ol start="98" class="pre-context" id="pre126371459218048">
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>                return self.cursor.execute(sql, params)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post126371459218048">
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre></pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        # Raise a warning during app initialization (stored_app_configs is only</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        # ever set during testing).</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>        if not apps.ready and not apps.stored_app_configs:</pre></li>
                  
                  <li onclick="toggle('pre126371459218048', 'post126371459218048')"><pre>            warnings.warn(self.APPS_NOT_READY_WARNING_MSG, category=RuntimeWarning)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v126371459218048">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(None,
 False,
 UUID(&#x27;3e6259ad-8550-49ed-8228-730c8aa9762a&#x27;),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321470, tzinfo=datetime.timezone.utc),
 datetime.datetime(2024, 11, 7, 11, 44, 19, 321488, tzinfo=datetime.timezone.utc),
 &#x27;Chuks&#x27;,
 None,
 &#x27;Ibejindu&#x27;,
 &#x27;chukaibeji1@yopmail.com&#x27;,
 False,
 &#x27;&#x27;,
 &#x27;07013729134&#x27;,
 False,
 None,
 &#x27;Male&#x27;,
 &#x27;ADMIN&#x27;,
 None,
 True,
 False,
 None,
 False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x72ef25e64380&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;INSERT INTO &quot;user_profile_user&quot; (&quot;last_login&quot;, &quot;is_superuser&quot;, &quot;id&quot;, &#x27;
 &#x27;&quot;created_at&quot;, &quot;updated_at&quot;, &quot;first_name&quot;, &quot;middle_name&quot;, &quot;last_name&quot;, &#x27;
 &#x27;&quot;email&quot;, &quot;email_verified&quot;, &quot;password&quot;, &quot;phone_number&quot;, &quot;phone_verified&quot;, &#x27;
 &#x27;&quot;address&quot;, &quot;gender&quot;, &quot;user_type&quot;, &quot;date_of_birth&quot;, &quot;is_active&quot;, &quot;is_staff&quot;, &#x27;
 &#x27;&quot;referral_code&quot;, &quot;has_updated_password&quot;) VALUES (%s, %s, %s, %s, %s, %s, %s, &#x27;
 &#x27;%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="IntegrityError at /global_intern/global_intern_registration/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: https://dev.getlinked.ai/global_intern/global_intern_registration/

Django Version: 5.1.1
Python Version: 3.12.3
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;core&#x27;,
 &#x27;user_profile&#x27;,
 &#x27;talent_dashboard&#x27;,
 &#x27;recruiter.apps.RecruiterConfig&#x27;,
 &#x27;global_intern&#x27;,
 &#x27;interview_management&#x27;,
 &#x27;assessment.apps.AssessmentConfig&#x27;,
 &#x27;user_transaction.apps.UserTransactionConfig&#x27;,
 &#x27;main&#x27;,
 &#x27;referral_app.apps.ReferralAppConfig&#x27;,
 &#x27;services.apps.ServicesConfig&#x27;,
 &#x27;ads_tracker&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;import_export&#x27;,
 &#x27;cloudinary&#x27;,
 &#x27;django_celery_results&#x27;,
 &#x27;django_celery_beat&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;hackathon&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;storages&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The above exception (duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;
DETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.
) was the direct cause of the following exception:
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/global_intern/views.py", line 118, in post
    user = User.sign_up(**user_data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/user_profile/models.py", line 112, in sign_up
    user = cls.objects.create(
           
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/query.py", line 679, in create
    obj.save(force_insert=True, using=self.db)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/contrib/auth/base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py", line 891, in save
    self.save_base(
    ^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py", line 997, in save_base
    updated = self._save_table(
              
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py", line 1160, in _save_table
    results = self._do_insert(
              
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/base.py", line 1201, in _do_insert
    return manager._insert(
           
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/models/sql/compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 122, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 79, in execute
    return self._execute_with_wrappers(
           
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/db/backends/utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Exception Type: IntegrityError at /global_intern/global_intern_registration/
Exception Value: duplicate key value violates unique constraint &quot;user_profile_user_email_key&quot;
DETAIL:  Key (email)=(chukaibeji1@yopmail.com) already exists.

</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th scope="col">Variable</th>
          <th scope="col">Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>name</td>
            <td class="code"><pre>&#x27;Chuks Ibejindu&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>email</td>
            <td class="code"><pre>&#x27;chukaibeji1@yopmail.com&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>phone_number</td>
            <td class="code"><pre>&#x27;07013729134&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>role</td>
            <td class="code"><pre>&#x27;Software Engineer&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>years_of_experience</td>
            <td class="code"><pre>&#x27;2&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>current_location</td>
            <td class="code"><pre>&#x27;New York, USA&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>linkedin_profile</td>
            <td class="code"><pre>&#x27;https://www.linkedin.com/in/tobitaiwo&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>portfolio_website</td>
            <td class="code"><pre>&#x27;https://johndoeportfolio.com&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>confirm_password</td>
            <td class="code"><pre>&#x27;Test@1234&#x27;</pre></td>
          </tr>
        
          <tr>
            <td>gender</td>
            <td class="code"><pre>&#x27;Male&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;1318&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>(&#x27;multipart/form-data; &#x27;
 &#x27;boundary=--------------------------835294030694848318086276&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CACHE_CONTROL</td>
          <td class="code"><pre>&#x27;no-cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;close&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;dev.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_POSTMAN_TOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;PostmanRuntime/7.39.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;40.86.44.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_REAL_IP</td>
          <td class="code"><pre>&#x27;40.86.44.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/global_intern/global_intern_registration/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#x27;/global_intern/global_intern_registration/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;dev.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;443&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;gunicorn/23.0.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;socket.socket fd=9, family=1, type=1, proto=0, laddr=/run/gunicorn.sock&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x72ef25e66140&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;gunicorn.http.wsgi.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x72ef25e66090&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input_terminated</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>get_link.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;64.227.14.194&#x27;, &#x27;dev.getlinked.ai&#x27;, &#x27;www.dev.getlinked.ai&#x27;, &#x27;localhost&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APITOOLKIT_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>API_HASH</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;user_profile.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_DEFAULT_ACL</td>
          <td class="code"><pre>&#x27;public-read&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_LOCATION</td>
          <td class="code"><pre>&#x27;static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_PRIVATE_MEDIA_LOCATION</td>
          <td class="code"><pre>&#x27;media/getlinked/private&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_S3_ENDPOINT_URL</td>
          <td class="code"><pre>&#x27;https://nyc3.digitaloceanspaces.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_S3_OBJECT_PARAMETERS</td>
          <td class="code"><pre>{&#x27;CacheControl&#x27;: &#x27;max-age=86400&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;whisper-space&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BACKEND_BASE_URL</td>
          <td class="code"><pre>&#x27;https://backend-dev.getlinked.ai/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/GetLinkBackend&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django_redis.cache.RedisCache&#x27;,
             &#x27;LOCATION&#x27;: &#x27;redis://127.0.0.1:6379/1&#x27;,
             &#x27;OPTIONS&#x27;: {&#x27;CLIENT_CLASS&#x27;: &#x27;django_redis.client.DefaultClient&#x27;}}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_ACCEPT_CONTENT</td>
          <td class="code"><pre>[&#x27;application/json&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BEAT_SCHEDULE</td>
          <td class="code"><pre>{&#x27;automate_pipeline&#x27;: {&#x27;schedule&#x27;: datetime.timedelta(seconds=120),
                       &#x27;task&#x27;: &#x27;recruiter.tasks.automate_pipeline&#x27;},
 &#x27;clear_temp_jobs&#x27;: {&#x27;schedule&#x27;: datetime.timedelta(seconds=3600),
                     &#x27;task&#x27;: &#x27;talent_dashboard.task.clear_temp_jobs&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;redis://127.0.0.1:6379&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULTS_EXTENDED</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULT_BACKEND</td>
          <td class="code"><pre>&#x27;django-db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULT_SERIALIZER</td>
          <td class="code"><pre>&#x27;json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_TASK_SERIALIZER</td>
          <td class="code"><pre>&#x27;json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_TIMEZONE</td>
          <td class="code"><pre>&#x27;Africa/Lagos&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHAT_GPT_ADMIN</td>
          <td class="code"><pre>&#x27;Libertyassured@gmail.com,inyang@libertyng.com,chuks@libertyng.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_API_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_CLOUD_NAME</td>
          <td class="code"><pre>&#x27;dhgp0fmlh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTACT_OUT_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CORE_SIGNALS_SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_ALL_ORIGINS</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CV_FRONTEND_URL</td>
          <td class="code"><pre>&#x27;https://resume.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql_psycopg2&#x27;,
             &#x27;HOST&#x27;: &#x27;localhost&#x27;,
             &#x27;NAME&#x27;: &#x27;gtdb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;gtuser&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>52428800</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>900</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CANDIDATES_PER_BADGE</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;get_link.storage_backends.PublicMediaStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_OTP</td>
          <td class="code"><pre>&#x27;808080&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DYTE_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DYTE_ORG_ID</td>
          <td class="code"><pre>&#x27;d576288f-0a41-4a88-9745-26ed188f48f0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ENVIRONMENT</td>
          <td class="code"><pre>&#x27;development&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FACE_MATCH_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/kyc/face-match&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FRONTEND_URL</td>
          <td class="code"><pre>&#x27;https://getlinked-main-dev-frontend.vercel.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_EXTRACTOR_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/kyc/id-extractor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;core&#x27;,
 &#x27;user_profile&#x27;,
 &#x27;talent_dashboard&#x27;,
 &#x27;recruiter.apps.RecruiterConfig&#x27;,
 &#x27;global_intern&#x27;,
 &#x27;interview_management&#x27;,
 &#x27;assessment.apps.AssessmentConfig&#x27;,
 &#x27;user_transaction.apps.UserTransactionConfig&#x27;,
 &#x27;main&#x27;,
 &#x27;referral_app.apps.ReferralAppConfig&#x27;,
 &#x27;services.apps.ServicesConfig&#x27;,
 &#x27;ads_tracker&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;import_export&#x27;,
 &#x27;cloudinary&#x27;,
 &#x27;django_celery_results&#x27;,
 &#x27;django_celery_beat&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;hackathon&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;storages&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>KYC_EMAIL</td>
          <td class="code"><pre>&#x27;chuks@libertyng.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>KYC_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/accounts/user/login&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MAILGUN_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAILGUN_URL</td>
          <td class="code"><pre>&#x27;https://api.mailgun.net/v3/mg.getlinked.ai/messages&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;https://https://nyc3.digitaloceanspaces.com/media/getlinked//&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>OPENAI_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OTP_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PAYSTACK_BEARER</td>
          <td class="code"><pre>&#x27;sk_test_030fbbb82fa59ffc1e0a97b29b6b11dbc4a60feb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>PRIVATE_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;get_link.storage_backends.PrivateMediaStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PUBLIC_MEDIA_LOCATION</td>
          <td class="code"><pre>&#x27;media/getlinked/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;],
 &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;]}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;get_link.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVICE_URL</td>
          <td class="code"><pre>&#x27;https://backend-dev.getlinked.ai/services/multiple_cv_upload/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;get_link.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ALGORITHM&#x27;: &#x27;HS512&#x27;,
 &#x27;AUTH_HEADER_NAME&#x27;: &#x27;HTTP_AUTHORIZATION&#x27;,
 &#x27;AUTH_HEADER_TYPES&#x27;: (&#x27;Bearer&#x27;,),
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;SIGNING_KEY&#x27;: &#x27;********************&#x27;,
 &#x27;USER_ID_FIELD&#x27;: &#x27;id&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;whitenoise.storage.CompressedStaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/GetLinkBackend/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/home/GetLinkBackend/templates&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;Africa/Lagos&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WHISPER_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WHISPER_URL</td>
          <td class="code"><pre>&#x27;https://whispersms.xyz/api/send_message/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_CALL_BACK</td>
          <td class="code"><pre>&#x27;xxxxx&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_API_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_PAYMENT_PIN</td>
          <td class="code"><pre>&#x27;23453456789876&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_SOURCE_ACCOUNT</td>
          <td class="code"><pre>&#x27;0000000000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;get_link.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
