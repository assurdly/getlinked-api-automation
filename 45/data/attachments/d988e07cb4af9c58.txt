<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ImproperlyConfigured
          at /assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/</title>
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background-color:#fff; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size: 0.6875rem; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #info { padding: 0; }
    #info > * { padding:10px 20px; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size: 0.7rem; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5rem; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<header id="summary">
  <h1>ImproperlyConfigured
       at /assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/</h1>
  <pre class="exception_value">Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre>
  <table class="meta">

    <tr>
      <th scope="row">Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th scope="row">Request URL:</th>
      <td>https://dev.getlinked.ai/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/</td>
    </tr>

    <tr>
      <th scope="row">Django Version:</th>
      <td>5.1.1</td>
    </tr>

    <tr>
      <th scope="row">Exception Type:</th>
      <td>ImproperlyConfigured</td>
    </tr>


    <tr>
      <th scope="row">Exception Value:</th>
      <td><pre>Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
    </tr>


    <tr>
      <th scope="row">Exception Location:</th>
      <td><span class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</span>, line 1367, in build_unknown_field</td>
    </tr>


    <tr>
      <th scope="row">Raised during:</th>
      <td>assessment.views.RetrieveUpdateQuestionPack</td>
    </tr>

    <tr>
      <th scope="row">Python Executable:</th>
      <td>/home/GetLinkBackend/venv/bin/python3</td>
    </tr>
    <tr>
      <th scope="row">Python Version:</th>
      <td>3.12.3</td>
    </tr>
    <tr>
      <th scope="row">Python Path:</th>
      <td><pre><code>[&#x27;/home/GetLinkBackend&#x27;,
 &#x27;/home/GetLinkBackend&#x27;,
 &#x27;/home/GetLinkBackend/venv/bin&#x27;,
 &#x27;/usr/lib/python312.zip&#x27;,
 &#x27;/usr/lib/python3.12&#x27;,
 &#x27;/usr/lib/python3.12/lib-dynload&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;,
 &#x27;/home/GetLinkBackend/venv/lib/python3.12/site-packages/odf&#x27;]</code></pre></td>
    </tr>
    <tr>
      <th scope="row">Server time:</th>
      <td>Sun, 01 Dec 2024 21:04:00 +0100</td>
    </tr>
  </table>
</header>

<main id="info">




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c133769787481024">
              
                <ol start="48" class="pre-context" id="pre133769787481024">
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post133769787481024">
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre133769787481024', 'post133769787481024')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787481024">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x79a9cb7da060&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c133769787482048">
              
                <ol start="190" class="pre-context" id="pre133769787482048">
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post133769787482048">
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787482048', 'post133769787482048')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787482048">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x79a9b5b351c0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method AuditLoggingMiddleware.process_view of &lt;AuditLoggingMiddleware get_response=BaseHandler._get_response&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x79a9cb7da060&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x79a9b5b351c0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/decorators/csrf.py</code>, line 65, in _view_wrapper
          

          
            <div class="context" id="c133769787478400">
              
                <ol start="58" class="pre-context" id="pre133769787478400">
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>        async def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>            return await view_func(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>        def _view_wrapper(request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="65" class="context-line">
                <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>            return view_func(request, *args, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='66' class="post-context" id="post133769787478400">
                  
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>    _view_wrapper.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787478400', 'post133769787478400')"><pre>    return wraps(view_func)(_view_wrapper)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787478400">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x79a9b5b35120&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c133769793863168">
              
                <ol start="97" class="pre-context" id="pre133769793863168">
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post133769793863168">
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre133769793863168', 'post133769793863168')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769793863168">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;assessment.views.RetrieveUpdateQuestionPack&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c133769787484160">
              
                <ol start="502" class="pre-context" id="pre133769787484160">
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post133769787484160">
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre133769787484160', 'post133769787484160')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787484160">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method RetrieveUpdateQuestionPack.get of &lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c133769793898112">
              
                <ol start="462" class="pre-context" id="pre133769793898112">
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post133769793898112">
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre133769793898112', 'post133769793898112')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769793898112">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;,
 &#x27;view&#x27;: &lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x79a9b632e520&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c133769793910784">
              
                <ol start="473" class="pre-context" id="pre133769793910784">
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post133769793910784">
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre133769793910784', 'post133769793910784')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769793910784">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c133769787485504">
              
                <ol start="499" class="pre-context" id="pre133769787485504">
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post133769787485504">
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre133769787485504', 'post133769787485504')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787485504">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method RetrieveUpdateQuestionPack.get of &lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;pk&#x27;: UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/assessment/views.py</code>, line 4022, in get
          

          
            <div class="context" id="c133769787474048">
              
                <ol start="4015" class="pre-context" id="pre133769787474048">
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>    Returns:</pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>    - Response: JSON response containing the question pack data.</pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>    def get(self, request, pk):</pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        question_pack = QuestionPack.objects.get(pk=pk)</pre></li>
                
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        serializer = QuestionPackSerializer(question_pack)</pre></li>
                
                </ol>
              
              <ol start="4022" class="context-line">
                <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        return Response(serializer.data)
                              ^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='4023' class="post-context" id="post133769787474048">
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>    def patch(self, request, pk):</pre></li>
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        question_pack = QuestionPack.objects.get(pk=pk)</pre></li>
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        serializer = QuestionPackSerializer(</pre></li>
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>            question_pack, data=request.data, partial=True</pre></li>
                  
                  <li onclick="toggle('pre133769787474048', 'post133769787474048')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787474048">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>pk</td>
                    <td class="code"><pre>UUID(&#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>question_pack</td>
                    <td class="code"><pre>&lt;QuestionPack: Cypress&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;assessment.views.RetrieveUpdateQuestionPack object at 0x79a9b4cd0800&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 571, in data
          

          
            <div class="context" id="c133769787485824">
              
                <ol start="564" class="pre-context" id="pre133769787485824">
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>        return BoundField(field, value, error)</pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    # Include a backlink to the serializer class on return objects.</pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    # Allows renderers such as HTMLFormRenderer to get the full field info.</pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    @property</pre></li>
                
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    def data(self):</pre></li>
                
                </ol>
              
              <ol start="571" class="context-line">
                <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>        ret = super().data
                   ^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='572' class="post-context" id="post133769787485824">
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>        return ReturnDict(ret, serializer=self)</pre></li>
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    @property</pre></li>
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>    def errors(self):</pre></li>
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>        ret = super().errors</pre></li>
                  
                  <li onclick="toggle('pre133769787485824', 'post133769787485824')"><pre>        if isinstance(ret, list) and len(ret) == 1 and getattr(ret[0], &#x27;code&#x27;, None) == &#x27;null&#x27;:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787485824">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework.serializers.Serializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 249, in data
          

          
            <div class="context" id="c133769787480384">
              
                <ol start="242" class="pre-context" id="pre133769787480384">
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>                &#x27;You should either call `.is_valid()` first, &#x27;</pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>                &#x27;or access `.initial_data` instead.&#x27;</pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>            raise AssertionError(msg)</pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>        if not hasattr(self, &#x27;_data&#x27;):</pre></li>
                
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>            if self.instance is not None and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>
                
                </ol>
              
              <ol start="249" class="context-line">
                <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>                self._data = self.to_representation(self.instance)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='250' class="post-context" id="post133769787480384">
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>            elif hasattr(self, &#x27;_validated_data&#x27;) and not getattr(self, &#x27;_errors&#x27;, None):</pre></li>
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>                self._data = self.to_representation(self.validated_data)</pre></li>
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>                self._data = self.get_initial()</pre></li>
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre>        return self._data</pre></li>
                  
                  <li onclick="toggle('pre133769787480384', 'post133769787480384')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787480384">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 538, in to_representation
          

          
            <div class="context" id="c133769787486976">
              
                <ol start="531" class="pre-context" id="pre133769787486976">
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            #</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            # For related fields with `use_pk_only_optimization` we need to</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            # resolve the pk value.</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            check_for_none = attribute.pk if isinstance(attribute, PKOnlyObject) else attribute</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            if check_for_none is None:</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>                ret[field.field_name] = None</pre></li>
                
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="538" class="context-line">
                <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>                ret[field.field_name] = field.to_representation(attribute)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='539' class="post-context" id="post133769787486976">
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>        return ret</pre></li>
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>    def validate(self, attrs):</pre></li>
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre>        return attrs</pre></li>
                  
                  <li onclick="toggle('pre133769787486976', 'post133769787486976')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787486976">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>attribute</td>
                    <td class="code"><pre>&lt;django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.&lt;locals&gt;.ManyRelatedManager object at 0x79a9b4b6f4d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>check_for_none</td>
                    <td class="code"><pre>&lt;django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.&lt;locals&gt;.ManyRelatedManager object at 0x79a9b4b6f4d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>&lt;generator object Serializer._readable_fields at 0x79a9b4bd8580&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>&lt;QuestionPack: Cypress&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>{&#x27;id&#x27;: &#x27;aadb55d3-53f4-4c85-a761-a91acd8f4754&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 714, in to_representation
          

          
            <div class="context" id="c133769787484992">
              
                <ol start="707" class="pre-context" id="pre133769787484992">
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        List of object instances -&gt; List of dicts of primitive datatypes.</pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        # Dealing with nested relationships, data can be a Manager,</pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        # so, first get a queryset from the Manager if needed</pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        iterable = data.all() if isinstance(data, models.manager.BaseManager) else data</pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        return [</pre></li>
                
                </ol>
              
              <ol start="714" class="context-line">
                <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>            self.child.to_representation(item) for item in iterable
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='715' class="post-context" id="post133769787484992">
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        ]</pre></li>
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>    def validate(self, attrs):</pre></li>
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>        return attrs</pre></li>
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769787484992', 'post133769787484992')"><pre>    def update(self, instance, validated_data):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769787484992">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>&lt;django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.&lt;locals&gt;.ManyRelatedManager object at 0x79a9b4b6f4d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>iterable</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;Question: Question object (6e21e4ea-8280-44f7-9ded-cc18dfbbc2e9)&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 523, in to_representation
          

          
            <div class="context" id="c133769777844032">
              
                <ol start="516" class="pre-context" id="pre133769777844032">
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>    def to_representation(self, instance):</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        Object instance -&gt; Dict of primitive datatypes.</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        ret = {}</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        fields = self._readable_fields</pre></li>
                
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre></pre></li>
                
                </ol>
              
              <ol start="523" class="context-line">
                <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>        for field in fields:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='524' class="post-context" id="post133769777844032">
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>            try:</pre></li>
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>                attribute = field.get_attribute(instance)</pre></li>
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>            except SkipField:</pre></li>
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>                continue</pre></li>
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777844032', 'post133769777844032')"><pre>            # We skip `to_representation` for `None` values so that fields do</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777844032">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>&lt;generator object Serializer._readable_fields at 0x79a9b4bdbb80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>&lt;Question: Question object (6e21e4ea-8280-44f7-9ded-cc18dfbbc2e9)&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 384, in _readable_fields
          

          
            <div class="context" id="c133769777849728">
              
                <ol start="377" class="pre-context" id="pre133769777849728">
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>    def _writable_fields(self):</pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>        for field in self.fields.values():</pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>            if not field.read_only:</pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>                yield field</pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>    @property</pre></li>
                
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>    def _readable_fields(self):</pre></li>
                
                </ol>
              
              <ol start="384" class="context-line">
                <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>        for field in self.fields.values():
                          ^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='385' class="post-context" id="post133769777849728">
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>            if not field.write_only:</pre></li>
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>                yield field</pre></li>
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>    def get_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre133769777849728', 'post133769777849728')"><pre>        Returns a dictionary of {field_name: field_instance}.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777849728">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/utils/functional.py</code>, line 47, in __get__
          

          
            <div class="context" id="c133769777844224">
              
                <ol start="40" class="pre-context" id="pre133769777844224">
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        Call the function and put the return value in instance.__dict__ so that</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        subsequent attribute access on the instance returns the cached value</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        instead of calling cached_property.__get__().</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        if instance is None:</pre></li>
                
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>            return self</pre></li>
                
                </ol>
              
              <ol start="47" class="context-line">
                <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        res = instance.__dict__[self.name] = self.func(instance)
                                                 ^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='48' class="post-context" id="post133769777844224">
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>        return res</pre></li>
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>class classproperty:</pre></li>
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>    &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre133769777844224', 'post133769777844224')"><pre>    Decorator that converts a method with a single cls argument into a property</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777844224">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;assessment.serializers.QuestionSerializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.utils.functional.cached_property object at 0x79a9b67c6de0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 372, in fields
          

          
            <div class="context" id="c133769777849920">
              
                <ol start="365" class="pre-context" id="pre133769777849920">
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        A dictionary of {field_name: field_instance}.</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        # `fields` is evaluated lazily. We do this to ensure that we don&#x27;t</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        # have issues importing modules that use ModelSerializers as fields,</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        # even if Django&#x27;s app-loading stage has not yet run.</pre></li>
                
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        fields = BindingDict(self)</pre></li>
                
                </ol>
              
              <ol start="372" class="context-line">
                <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        for key, value in self.get_fields().items():
                               ^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='373' class="post-context" id="post133769777849920">
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>            fields[key] = value</pre></li>
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        return fields</pre></li>
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>    @property</pre></li>
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>    def _writable_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre133769777849920', 'post133769777849920')"><pre>        for field in self.fields.values():</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777849920">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 1103, in get_fields
          

          
            <div class="context" id="c133769777852352">
              
                <ol start="1096" class="pre-context" id="pre133769777852352">
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            extra_field_kwargs = extra_kwargs.get(field_name, {})</pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            source = extra_field_kwargs.get(&#x27;source&#x27;, &#x27;*&#x27;)</pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            if source == &#x27;*&#x27;:</pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>                source = field_name</pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            # Determine the serializer field class and keyword arguments.</pre></li>
                
                </ol>
              
              <ol start="1103" class="context-line">
                <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            field_class, field_kwargs = self.build_field(
                                              </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1104' class="post-context" id="post133769777852352">
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>                source, info, model, depth</pre></li>
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            # Include any kwargs defined in `Meta.extra_kwargs`</pre></li>
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>            field_kwargs = self.include_extra_kwargs(</pre></li>
                  
                  <li onclick="toggle('pre133769777852352', 'post133769777852352')"><pre>                field_kwargs, extra_field_kwargs</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777852352">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>declared_fields</td>
                    <td class="code"><pre>{&#x27;image_urls&#x27;: ListField(child=CharField(), read_only=True, source=&#x27;images&#x27;),
 &#x27;images&#x27;: ListField(child=ImageField(required=False), required=False, write_only=True)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_field_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_class</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework.fields.BooleanField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_kwargs</td>
                    <td class="code"><pre>{&#x27;required&#x27;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;is_shuffle&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_names</td>
                    <td class="code"><pre>[&#x27;id&#x27;,
 &#x27;type&#x27;,
 &#x27;question&#x27;,
 &#x27;answer_options&#x27;,
 &#x27;answer&#x27;,
 &#x27;role&#x27;,
 &#x27;experience_level&#x27;,
 &#x27;category&#x27;,
 &#x27;points&#x27;,
 &#x27;label&#x27;,
 &#x27;tags&#x27;,
 &#x27;test&#x27;,
 &#x27;section&#x27;,
 &#x27;is_custom&#x27;,
 &#x27;time&#x27;,
 &#x27;creator&#x27;,
 &#x27;created_at&#x27;,
 &#x27;updated_at&#x27;,
 &#x27;instructions&#x27;,
 &#x27;images&#x27;,
 &#x27;image_urls&#x27;,
 &#x27;has_image&#x27;,
 &#x27;is_shuffle&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>{&#x27;answer&#x27;: ListField(allow_null=True, child=CharField(label=&#x27;Answer&#x27;, max_length=200), required=False),
 &#x27;answer_options&#x27;: ListField(allow_null=True, child=CharField(label=&#x27;Answer options&#x27;, max_length=600), required=False),
 &#x27;category&#x27;: ChoiceField(allow_blank=True, allow_null=True, choices=[(&#x27;technical&#x27;, &#x27;Technical&#x27;), (&#x27;skill&#x27;, &#x27;Skill&#x27;), (&#x27;role_specific&#x27;, &#x27;Role Specific&#x27;), (&#x27;general&#x27;, &#x27;General&#x27;), (&#x27;listening&#x27;, &#x27;Listening&#x27;), (&#x27;reading&#x27;, &#x27;Reading&#x27;), (&#x27;writing&#x27;, &#x27;Writing&#x27;), (&#x27;speaking&#x27;, &#x27;Speaking&#x27;)], required=False),
 &#x27;created_at&#x27;: DateTimeField(read_only=True),
 &#x27;creator&#x27;: PrimaryKeyRelatedField(allow_null=True, queryset=Recruiter.objects.all(), required=False),
 &#x27;experience_level&#x27;: ChoiceField(allow_blank=True, allow_null=True, choices=[(&#x27;entry_level&#x27;, &#x27;Entry level&#x27;), (&#x27;intermediate_level&#x27;, &#x27;Intermediate level&#x27;), (&#x27;expert_level&#x27;, &#x27;Expert level&#x27;)], required=False),
 &#x27;has_image&#x27;: BooleanField(required=False),
 &#x27;id&#x27;: UUIDField(read_only=True),
 &#x27;image_urls&#x27;: ListField(child=CharField(), read_only=True, source=&#x27;images&#x27;),
 &#x27;images&#x27;: ListField(child=ImageField(required=False), required=False, write_only=True),
 &#x27;instructions&#x27;: CharField(allow_blank=True, allow_null=True, help_text=&#x27;Example: Focus on clarity, completeness, and correctness of the response.&#x27;, required=False, style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;}),
 &#x27;is_custom&#x27;: BooleanField(required=False),
 &#x27;label&#x27;: CharField(allow_blank=True, allow_null=True, max_length=200, required=False),
 &#x27;points&#x27;: IntegerField(max_value=2147483647, min_value=0, required=False),
 &#x27;question&#x27;: CharField(allow_blank=True, allow_null=True, required=False, style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;}),
 &#x27;role&#x27;: PrimaryKeyRelatedField(allow_null=True, queryset=Role.objects.all(), required=False),
 &#x27;section&#x27;: PrimaryKeyRelatedField(allow_null=True, queryset=QuestionSection.objects.all(), required=False),
 &#x27;tags&#x27;: ListField(allow_null=True, child=CharField(label=&#x27;Tags&#x27;, max_length=200), required=False),
 &#x27;test&#x27;: PrimaryKeyRelatedField(allow_null=True, queryset=Test.objects.all(), required=False),
 &#x27;time&#x27;: IntegerField(max_value=2147483647, min_value=0, required=False),
 &#x27;type&#x27;: ChoiceField(allow_blank=True, allow_null=True, choices=[(&#x27;multiple_choice&#x27;, &#x27;Multiple Choice&#x27;), (&#x27;essay&#x27;, &#x27;Essay&#x27;), (&#x27;coding&#x27;, &#x27;Coding&#x27;), (&#x27;fill_in_the_blanks&#x27;, &#x27;Fill in the Blanks&#x27;), (&#x27;multiple_response&#x27;, &#x27;Multiple Response&#x27;), (&#x27;true_false&#x27;, &#x27;True/False&#x27;)], required=False),
 &#x27;updated_at&#x27;: DateTimeField(read_only=True)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hidden_fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldInfo(pk=&lt;django.db.models.fields.UUIDField: id&gt;, fields={&#x27;type&#x27;: &lt;django.db.models.fields.CharField: type&gt;, &#x27;question&#x27;: &lt;django.db.models.fields.TextField: question&gt;, &#x27;answer_options_type&#x27;: &lt;django.db.models.fields.CharField: answer_options_type&gt;, &#x27;answer_options&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer_options&gt;, &#x27;answer&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer&gt;, &#x27;experience_level&#x27;: &lt;django.db.models.fields.CharField: experience_level&gt;, &#x27;category&#x27;: &lt;django.db.models.fields.CharField: category&gt;, &#x27;points&#x27;: &lt;django.db.models.fields.PositiveIntegerField: points&gt;, &#x27;label&#x27;: &lt;django.db.models.fields.CharField: label&gt;, &#x27;tags&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: tags&gt;, &#x27;is_custom&#x27;: &lt;django.db.models.fields.BooleanField: is_custom&gt;, &#x27;is_shuffled&#x27;: &lt;django.db.models.fields.BooleanField: is_shuffled&gt;, &#x27;time&#x27;: &lt;django.db.models.fields.PositiveIntegerField: time&gt;, &#x27;created_at&#x27;: &lt;django.db.models.fields.DateTimeField: created_at&gt;, &#x27;updated_at&#x27;: &lt;django.db.models.fields.DateTimeField: updated_at&gt;, &#x27;instructions&#x27;: &lt;django.db.models.fields.TextField: instructions&gt;, &#x27;images&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: images&gt;, &#x27;has_image&#x27;: &lt;django.db.models.fields.BooleanField: has_image&gt;}, forward_relations={&#x27;role&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: role&gt;, related_model=&lt;class &#x27;assessment.models.Role&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;test&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: test&gt;, related_model=&lt;class &#x27;assessment.models.Test&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;section&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: section&gt;, related_model=&lt;class &#x27;assessment.models.QuestionSection&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;creator&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: creator&gt;, related_model=&lt;class &#x27;recruiter.models.Recruiter&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False)}, reverse_relations={&#x27;candidateanswer_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.CandidateAnswer&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;interviewanswer_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.InterviewAnswer&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;questionpack_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.QuestionPack&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;interviewpack_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.InterviewPack&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentsection_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentSection&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessment_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.Assessment&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentsession_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentSession&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentinterview_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentInterview&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)}, fields_and_pk={&#x27;pk&#x27;: &lt;django.db.models.fields.UUIDField: id&gt;, &#x27;id&#x27;: &lt;django.db.models.fields.UUIDField: id&gt;, &#x27;type&#x27;: &lt;django.db.models.fields.CharField: type&gt;, &#x27;question&#x27;: &lt;django.db.models.fields.TextField: question&gt;, &#x27;answer_options_type&#x27;: &lt;django.db.models.fields.CharField: answer_options_type&gt;, &#x27;answer_options&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer_options&gt;, &#x27;answer&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer&gt;, &#x27;experience_level&#x27;: &lt;django.db.models.fields.CharFielâ€¦ &lt;trimmed 7196 bytes string&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>model</td>
                    <td class="code"><pre>&lt;class &#x27;assessment.models.Question&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>source</td>
                    <td class="code"><pre>&#x27;is_shuffle&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 1249, in build_field
          

          
            <div class="context" id="c133769777840512">
              
                <ol start="1242" class="pre-context" id="pre133769777840512">
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        elif hasattr(model_class, field_name):</pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>            return self.build_property_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        elif field_name == self.url_field_name:</pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>            return self.build_url_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre></pre></li>
                
                </ol>
              
              <ol start="1249" class="context-line">
                <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        return self.build_unknown_field(field_name, model_class)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1250' class="post-context" id="post133769777840512">
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>    def build_standard_field(self, field_name, model_field):</pre></li>
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        Create regular model fields.</pre></li>
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre133769777840512', 'post133769777840512')"><pre>        field_mapping = ClassLookupDict(self.serializer_field_mapping)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769777840512">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;is_shuffle&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldInfo(pk=&lt;django.db.models.fields.UUIDField: id&gt;, fields={&#x27;type&#x27;: &lt;django.db.models.fields.CharField: type&gt;, &#x27;question&#x27;: &lt;django.db.models.fields.TextField: question&gt;, &#x27;answer_options_type&#x27;: &lt;django.db.models.fields.CharField: answer_options_type&gt;, &#x27;answer_options&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer_options&gt;, &#x27;answer&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer&gt;, &#x27;experience_level&#x27;: &lt;django.db.models.fields.CharField: experience_level&gt;, &#x27;category&#x27;: &lt;django.db.models.fields.CharField: category&gt;, &#x27;points&#x27;: &lt;django.db.models.fields.PositiveIntegerField: points&gt;, &#x27;label&#x27;: &lt;django.db.models.fields.CharField: label&gt;, &#x27;tags&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: tags&gt;, &#x27;is_custom&#x27;: &lt;django.db.models.fields.BooleanField: is_custom&gt;, &#x27;is_shuffled&#x27;: &lt;django.db.models.fields.BooleanField: is_shuffled&gt;, &#x27;time&#x27;: &lt;django.db.models.fields.PositiveIntegerField: time&gt;, &#x27;created_at&#x27;: &lt;django.db.models.fields.DateTimeField: created_at&gt;, &#x27;updated_at&#x27;: &lt;django.db.models.fields.DateTimeField: updated_at&gt;, &#x27;instructions&#x27;: &lt;django.db.models.fields.TextField: instructions&gt;, &#x27;images&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: images&gt;, &#x27;has_image&#x27;: &lt;django.db.models.fields.BooleanField: has_image&gt;}, forward_relations={&#x27;role&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: role&gt;, related_model=&lt;class &#x27;assessment.models.Role&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;test&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: test&gt;, related_model=&lt;class &#x27;assessment.models.Test&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;section&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: section&gt;, related_model=&lt;class &#x27;assessment.models.QuestionSection&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False), &#x27;creator&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ForeignKey: creator&gt;, related_model=&lt;class &#x27;recruiter.models.Recruiter&#x27;&gt;, to_many=False, to_field=&#x27;id&#x27;, has_through_model=False, reverse=False)}, reverse_relations={&#x27;candidateanswer_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.CandidateAnswer&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;interviewanswer_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.InterviewAnswer&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;questionpack_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.QuestionPack&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;interviewpack_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.InterviewPack&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentsection_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentSection&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessment_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.Assessment&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentsession_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentSession&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;assessmentinterview_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;assessment.models.AssessmentInterview&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)}, fields_and_pk={&#x27;pk&#x27;: &lt;django.db.models.fields.UUIDField: id&gt;, &#x27;id&#x27;: &lt;django.db.models.fields.UUIDField: id&gt;, &#x27;type&#x27;: &lt;django.db.models.fields.CharField: type&gt;, &#x27;question&#x27;: &lt;django.db.models.fields.TextField: question&gt;, &#x27;answer_options_type&#x27;: &lt;django.db.models.fields.CharField: answer_options_type&gt;, &#x27;answer_options&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer_options&gt;, &#x27;answer&#x27;: &lt;django.contrib.postgres.fields.array.ArrayField: answer&gt;, &#x27;experience_level&#x27;: &lt;django.db.models.fields.CharFielâ€¦ &lt;trimmed 7196 bytes string&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#x27;assessment.models.Question&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>nested_depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py</code>, line 1367, in build_unknown_field
          

          
            <div class="context" id="c133769793851072">
              
                <ol start="1360" class="pre-context" id="pre133769793851072">
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        return field_class, field_kwargs</pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre></pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>    def build_unknown_field(self, field_name, model_class):</pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        Raise an error on any unknown fields.</pre></li>
                
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1367" class="context-line">
                <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        raise ImproperlyConfigured(
              ^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1368' class="post-context" id="post133769793851072">
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>            &#x27;Field name `%s` is not valid for model `%s` in `%s.%s`.&#x27; %</pre></li>
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>            (field_name, model_class.__name__, self.__class__.__module__, self.__class__.__name__)</pre></li>
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre></pre></li>
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>    def include_extra_kwargs(self, kwargs, extra_kwargs):</pre></li>
                  
                  <li onclick="toggle('pre133769793851072', 'post133769793851072')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v133769793851072">
              <thead>
                <tr>
                  <th scope="col">Variable</th>
                  <th scope="col">Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;is_shuffle&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#x27;assessment.models.Question&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ImproperlyConfigured at /assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: https://dev.getlinked.ai/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/

Django Version: 5.1.1
Python Version: 3.12.3
Installed Applications:
[&#x27;daphne&#x27;,
 &#x27;channels&#x27;,
 &#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;core&#x27;,
 &#x27;user_profile&#x27;,
 &#x27;talent_dashboard&#x27;,
 &#x27;recruiter.apps.RecruiterConfig&#x27;,
 &#x27;global_intern&#x27;,
 &#x27;interview_management&#x27;,
 &#x27;assessment.apps.AssessmentConfig&#x27;,
 &#x27;user_transaction.apps.UserTransactionConfig&#x27;,
 &#x27;main&#x27;,
 &#x27;referral_app.apps.ReferralAppConfig&#x27;,
 &#x27;services.apps.ServicesConfig&#x27;,
 &#x27;ads_tracker&#x27;,
 &#x27;chats.apps.ChatsConfig&#x27;,
 &#x27;audit.apps.AuditConfig&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;import_export&#x27;,
 &#x27;cloudinary&#x27;,
 &#x27;django_celery_results&#x27;,
 &#x27;django_celery_beat&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;hackathon&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;storages&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;audit.utils.audit_middleware.AuditLoggingMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/decorators/csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/assessment/views.py", line 4022, in get
    return Response(serializer.data)
                    ^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 571, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 249, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 538, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 714, in to_representation
    self.child.to_representation(item) for item in iterable
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 523, in to_representation
    for field in fields:
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 384, in _readable_fields
    for field in self.fields.values():
                 ^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/django/utils/functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 372, in fields
    for key, value in self.get_fields().items():
                      ^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 1103, in get_fields
    field_class, field_kwargs = self.build_field(
                                
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 1249, in build_field
    return self.build_unknown_field(field_name, model_class)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/GetLinkBackend/venv/lib/python3.12/site-packages/rest_framework/serializers.py", line 1367, in build_unknown_field
    raise ImproperlyConfigured(
    ^

Exception Type: ImproperlyConfigured at /assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/
Exception Value: Field name `is_shuffle` is not valid for model `Question` in `assessment.serializers.QuestionSerializer`.
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>arike@mailinator.com</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Variable</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_AUTHORIZATION</td>
          <td class="code"><pre>(&#x27;Bearer &#x27;
 &#x27;eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMzMTY5Nzg0LCJpYXQiOjE3MzMwODMzODQsImp0aSI6IjlkNmQ1OGNiMjk2YjQ1YWFiOWQwNDljYWM5ZjhmMmE1IiwidXNlcl9pZCI6Ijg5NTY2MjE0LTU0ZWMtNGE4Ny1hNzgyLWQwNjY3YjgzMmE4NyJ9.qiEzuEtDLfFOOqScscgJfkY5a_snK2Lv4jp0FrljQ3urG4oa4QMCF99gQCzLBkNhlJahowBtuvWihv-LS53Fxw&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CACHE_CONTROL</td>
          <td class="code"><pre>&#x27;no-cache&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;close&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;dev.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_POSTMAN_TOKEN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;PostmanRuntime/7.39.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;20.43.230.227&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_REAL_IP</td>
          <td class="code"><pre>&#x27;20.43.230.227&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#x27;/assessments/question-packs/aadb55d3-53f4-4c85-a761-a91acd8f4754/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;GET&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;dev.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;443&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;gunicorn/23.0.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;socket.socket fd=15, family=1, type=1, proto=0, laddr=/run/gunicorn.sock&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x79a9b4cd2ad0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;gunicorn.http.wsgi.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x79a9b4cd2cf0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input_terminated</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>get_link.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th scope="col">Setting</th>
        <th scope="col">Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;64.227.14.194&#x27;, &#x27;dev.getlinked.ai&#x27;, &#x27;www.dev.getlinked.ai&#x27;, &#x27;localhost&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APITOOLKIT_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>API_HASH</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>ASGI_APPLICATION</td>
          <td class="code"><pre>&#x27;get_link.asgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;user_profile.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_ACCESS_KEY_ID</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_DEFAULT_ACL</td>
          <td class="code"><pre>&#x27;public-read&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_LOCATION</td>
          <td class="code"><pre>&#x27;static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_PRIVATE_MEDIA_LOCATION</td>
          <td class="code"><pre>&#x27;media/getlinked/private&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_S3_ENDPOINT_URL</td>
          <td class="code"><pre>&#x27;https://nyc3.digitaloceanspaces.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_S3_OBJECT_PARAMETERS</td>
          <td class="code"><pre>{&#x27;CacheControl&#x27;: &#x27;max-age=86400&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>AWS_SECRET_ACCESS_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AWS_STORAGE_BUCKET_NAME</td>
          <td class="code"><pre>&#x27;whisper-space&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BACKEND_BASE_URL</td>
          <td class="code"><pre>&#x27;https://dev.getlinked.ai/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/GetLinkBackend&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django_redis.cache.RedisCache&#x27;,
             &#x27;LOCATION&#x27;: &#x27;redis://127.0.0.1:6379/1&#x27;,
             &#x27;OPTIONS&#x27;: {&#x27;CLIENT_CLASS&#x27;: &#x27;django_redis.client.DefaultClient&#x27;}}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_ACCEPT_CONTENT</td>
          <td class="code"><pre>[&#x27;application/json&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BEAT_SCHEDULE</td>
          <td class="code"><pre>{&#x27;automate_pipeline&#x27;: {&#x27;schedule&#x27;: datetime.timedelta(seconds=120),
                       &#x27;task&#x27;: &#x27;recruiter.tasks.automate_pipeline&#x27;},
 &#x27;check-assessment-timeouts&#x27;: {&#x27;schedule&#x27;: datetime.timedelta(seconds=120),
                               &#x27;task&#x27;: &#x27;assessment.task.check_assessment_timeouts&#x27;},
 &#x27;clear_temp_jobs&#x27;: {&#x27;schedule&#x27;: datetime.timedelta(seconds=3600),
                     &#x27;task&#x27;: &#x27;talent_dashboard.task.clear_temp_jobs&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_BROKER_URL</td>
          <td class="code"><pre>&#x27;redis://127.0.0.1:6379/2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULTS_EXTENDED</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULT_BACKEND</td>
          <td class="code"><pre>&#x27;django-db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_RESULT_SERIALIZER</td>
          <td class="code"><pre>&#x27;json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_TASK_SERIALIZER</td>
          <td class="code"><pre>&#x27;json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CELERY_TIMEZONE</td>
          <td class="code"><pre>&#x27;Africa/Lagos&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHANNEL_LAYERS</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;channels_redis.core.RedisChannelLayer&#x27;,
             &#x27;CONFIG&#x27;: {&#x27;hosts&#x27;: [(&#x27;127.0.0.1&#x27;, 6379)]}}}</pre></td>
        </tr>
      
        <tr>
          <td>CHAT_GPT_ADMIN</td>
          <td class="code"><pre>&#x27;Libertyassured@gmail.com,inyang@libertyng.com,chuks@libertyng.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_API_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CLOUDINARY_CLOUD_NAME</td>
          <td class="code"><pre>&#x27;dhgp0fmlh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTACT_OUT_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CORE_SIGNALS_SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_ALL_ORIGINS</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CV_FRONTEND_URL</td>
          <td class="code"><pre>&#x27;https://resume.getlinked.ai&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql_psycopg2&#x27;,
             &#x27;HOST&#x27;: &#x27;localhost&#x27;,
             &#x27;NAME&#x27;: &#x27;gtdb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;gtuser&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>1073741824</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>900</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CANDIDATES_PER_BADGE</td>
          <td class="code"><pre>&#x27;2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;get_link.storage_backends.PublicMediaStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_OTP</td>
          <td class="code"><pre>&#x27;808080&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DYTE_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DYTE_ORG_ID</td>
          <td class="code"><pre>&#x27;d576288f-0a41-4a88-9745-26ed188f48f0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ENVIRONMENT</td>
          <td class="code"><pre>&#x27;development&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FACE_MATCH_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/kyc/face-match&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>1073741824</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMS_URLFIELD_ASSUME_HTTPS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FRONTEND_URL</td>
          <td class="code"><pre>&#x27;https://getlinked-main-dev-frontend.vercel.app&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ID_EXTRACTOR_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/kyc/id-extractor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;daphne&#x27;,
 &#x27;channels&#x27;,
 &#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;core&#x27;,
 &#x27;user_profile&#x27;,
 &#x27;talent_dashboard&#x27;,
 &#x27;recruiter.apps.RecruiterConfig&#x27;,
 &#x27;global_intern&#x27;,
 &#x27;interview_management&#x27;,
 &#x27;assessment.apps.AssessmentConfig&#x27;,
 &#x27;user_transaction.apps.UserTransactionConfig&#x27;,
 &#x27;main&#x27;,
 &#x27;referral_app.apps.ReferralAppConfig&#x27;,
 &#x27;services.apps.ServicesConfig&#x27;,
 &#x27;ads_tracker&#x27;,
 &#x27;chats.apps.ChatsConfig&#x27;,
 &#x27;audit.apps.AuditConfig&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;import_export&#x27;,
 &#x27;cloudinary&#x27;,
 &#x27;django_celery_results&#x27;,
 &#x27;django_celery_beat&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;hackathon&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;storages&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>KYC_EMAIL</td>
          <td class="code"><pre>&#x27;chuks@libertyng.com&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>KYC_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;ug&#x27;, &#x27;Uyghur&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ug&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#x27;disable_existing_loggers&#x27;: False,
 &#x27;formatters&#x27;: {&#x27;verbose&#x27;: {&#x27;format&#x27;: &#x27;{levelname} {asctime} {module} &#x27;
                                      &#x27;{process:d} {thread:d} {message}&#x27;,
                            &#x27;style&#x27;: &#x27;{&#x27;}},
 &#x27;handlers&#x27;: {&#x27;audit_file&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;,
                             &#x27;filename&#x27;: &#x27;audit.log&#x27;,
                             &#x27;formatter&#x27;: &#x27;verbose&#x27;,
                             &#x27;level&#x27;: &#x27;INFO&#x27;}},
 &#x27;loggers&#x27;: {&#x27;audit_logger&#x27;: {&#x27;handlers&#x27;: [&#x27;audit_file&#x27;],
                              &#x27;level&#x27;: &#x27;INFO&#x27;,
                              &#x27;propagate&#x27;: True}},
 &#x27;version&#x27;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;https://kyc.libertyng.com/api/v1/accounts/user/login&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MAILGUN_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MAILGUN_URL</td>
          <td class="code"><pre>&#x27;https://api.mailgun.net/v3/mg.getlinked.ai/messages&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;https://https://nyc3.digitaloceanspaces.com/media/getlinked//&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;audit.utils.audit_middleware.AuditLoggingMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>OPENAI_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OTP_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PAYSTACK_BEARER</td>
          <td class="code"><pre>&#x27;sk_test_030fbbb82fa59ffc1e0a97b29b6b11dbc4a60feb&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>PRIVATE_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;get_link.storage_backends.PrivateMediaStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PUBLIC_MEDIA_LOCATION</td>
          <td class="code"><pre>&#x27;media/getlinked/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;],
 &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;]}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;get_link.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVICE_URL</td>
          <td class="code"><pre>&#x27;https://dev.getlinked.ai/services/multiple_cv_upload/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;get_link.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ALGORITHM&#x27;: &#x27;HS512&#x27;,
 &#x27;AUTH_HEADER_NAME&#x27;: &#x27;HTTP_AUTHORIZATION&#x27;,
 &#x27;AUTH_HEADER_TYPES&#x27;: (&#x27;Bearer&#x27;,),
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;SIGNING_KEY&#x27;: &#x27;********************&#x27;,
 &#x27;USER_ID_FIELD&#x27;: &#x27;id&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;whitenoise.storage.CompressedStaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/GetLinkBackend/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/home/GetLinkBackend/templates&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;Africa/Lagos&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WHISPER_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WHISPER_URL</td>
          <td class="code"><pre>&#x27;https://whispersms.xyz/api/send_message/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_CALL_BACK</td>
          <td class="code"><pre>&#x27;xxxxx&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_API_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_PAYMENT_PIN</td>
          <td class="code"><pre>&#x27;23453456789876&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WOVEN_DISBURSEMENT_SOURCE_ACCOUNT</td>
          <td class="code"><pre>&#x27;0000000000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;get_link.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>
</main>


  <footer id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </footer>

</body>
</html>
